apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-mongo
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-mongo
data:
  init-mongo.js: |-
    db.createUser({
      user: 'uploader',
      pwd: 'uploader-passwd',
      roles: [
        {
          role: 'readWrite',
          db: 'uploader'
        }
      ]
    })
    EOF
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
  namespace: default
spec:
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: mongo

        # resources:
        #   limits:
        #     memory: "50Mi"
        #     cpu: "100m"
        #   requests:
        #       memory: "50Mi"
        #       cpu: "100m"
        envFrom:
        - secretRef:
            name: mongo-secret
        env:
        - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
          value: "true"

        ports:
        - containerPort: 27017
          name: mongo
        volumeMounts:
          - name: data
            mountPath: "/data/db"
          - name: mongo-config
            mountPath: "/docker-entrypoint-initdb.d/init-mongo.js"
            subPath: "init-mongo.js"
            readOnly: true
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pvc-mongo
      - name: mongo-config
        configMap:
          defaultMode: 0700
          name: init-mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: default
spec:
  ports:
  - name: http
    targetPort: 27017
    port: 27017
  type: NodePort
  selector:
    app: mongodb